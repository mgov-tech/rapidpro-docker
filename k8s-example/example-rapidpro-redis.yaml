apiVersion: v1
kind: Service
metadata:
  namespace: prod-rapidpro
  name: redis-master
  labels:
    app: redis
    role: master
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
    role: master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: prod-rapidpro
  name: redis-master
spec:
  selector:
    matchLabels:
      app: redis
      role: master
      tier: backend
  replicas: 1
  template:
    metadata:
      namespace: prod-rapidpro
      labels:
        app: redis
        role: master
        tier: backend
    spec:
      containers:
      - name: master
        image: k8s.gcr.io/redis:e2e  # or just image: redis
        resources:
          requests:
            cpu: 200m
            memory: 200Mi
        ports:
        - containerPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  namespace: prod-rapidpro
  name: redis-slave
  labels:
    app: redis
    role: slave
spec:
  ports:
  - port: 6379
  selector:
    app: redis
    role: slave
---
apiVersion: apps/v1 #  for k8s versions before 1.9.0 use apps/v1beta2  and before 1.8.0 use extensions/v1beta1
kind: Deployment
metadata:
  namespace: prod-rapidpro
  name: redis-slave
spec:
  selector:
    matchLabels:
      app: redis
      role: slave
      tier: backend
  replicas: 6
  template:
    metadata:
      namespace: prod-rapidpro
      labels:
        app: redis
        role: slave
        tier: backend
    spec:
      containers:
      - name: slave
        image: gcr.io/google_samples/gb-redisslave:v1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        - name: GET_HOSTS_FROM
          value: dns
          # If your cluster config does not include a dns service, then to
          # instead access an environment variable to find the master
          # service's host, comment out the 'value: dns' line above, and
          # uncomment the line below:
          # value: env
        ports:
        - containerPort: 6379